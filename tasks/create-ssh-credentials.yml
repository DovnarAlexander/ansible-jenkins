---
# file: tasks/configure.yml

- block:

  - name: 'Generate key for {{ item.id }}.'
    shell: 'ssh-keygen -b 2048 -t rsa -f {{ jenkins_home }}/.ssh/{{ item.username }} -q -N ""'
    args:
      creates: '{{ jenkins_home }}/.ssh/{{ item.username }}'
    tags:
      - skip_ansible_lint

  - name: 'Check {{ item.id }} keys.'
    file:
      path: '{{ jenkins_home }}/.ssh/{{ item.username }}{{ key }}'
      owner: '{{ jenkins_system_user }}'
      mode: 0600
    with_items:
      - ''
      - '.pub'
    loop_control:
      loop_var: key

  - name: 'Slurp {{ item.id }}.pub.'
    slurp:
      src: '{{ jenkins_home }}/.ssh/{{ item.username }}.pub'
    register: key_pub_content

  - name: 'Read {{ item.id }}.pub key content.'
    set_fact:
      key_content: "{{ key_pub_content.content | b64decode | regex_search('ssh-rsa AAAA[0-9A-Za-z+/]+[=]{0,3}') }}"

  - name: 'Print {{ item.id }}.pub key content.'
    debug:
      msg:
        - 'SSH key is:'
        - '{{ key_content }}'
    no_log: False
    when:
      - item.print is defined
      - item.print

  - name: 'Create {{ item.id }} SSH credential.'
    jenkins_script:
      script: "{{ lookup('template', 'templates/groovy-scripts/create-ssh-credentials.groovy.j2') }}"
      url: '{{ jenkins_url }}'
      user: '{{ jenkins_admin_username }}'
      password: '{{ jenkins_admin_token }}'

  - name: 'Add SSH {{ item.id }} as an authorized_key.'
    authorized_key:
      user: jenkins
      state: present
      key: '{{ key_content }}'
    when:
      - item.local is defined
      - item.local

  no_log: True
